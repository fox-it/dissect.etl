from __future__ import annotations

from unittest.mock import Mock

from dissect.etl.headers.headers import EventTraceHeader, Marker

EVENT_TRACE_EVENT = (
    b"\x12\x01\x13\xc0\x01\x00\x00\x00\xe8\x02\x00\x00\xe4\x02\x00\x00"
    b"\x2b\x15\x41\x0b\x00\x00\x00\x00\xa7\xce\xdd\xb8\x20\xb5\x09\x49"
    b"\xbc\xeb\xe0\x17\x0c\x9f\x0e\x99\x00\x00\x00\x0b\x05\x00\x00\x00"
    b"\x00\x00\x00\x00\x00\x20\x00\x00\x11\x00\x00\x00\x02\x00\x00\x00"
    b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
    b"\x48\x00\x0c\x00\x01\x00\x3d\x00\x3d\x00\x4d\x69\x63\x72\x6f\x73"
    b"\x6f\x66\x74\x2e\x57\x69\x6e\x64\x6f\x77\x73\x2e\x53\x65\x72\x76"
    b"\x69\x63\x65\x43\x6f\x6e\x74\x72\x6f\x6c\x4d\x61\x6e\x61\x67\x65"
    b"\x72\x00\x13\x00\x01\x1a\x73\x50\x4f\xcf\x89\x82\x47\xb3\xe0\xdc"
    b"\xe8\xc9\x04\x76\xba\x00\x00\x00\x38\x00\x0b\x00\x00\x00\x2c\x00"
    b"\x2c\x00\x00\x53\x65\x72\x76\x69\x63\x65\x48\x6f\x73\x74\x53\x74"
    b"\x61\x72\x74\x65\x64\x00\x53\x65\x72\x76\x69\x63\x65\x48\x6f\x73"
    b"\x74\x4e\x61\x6d\x65\x00\x01\x50\x49\x44\x00\x08\x00\x00\x00\x00"
    b"\x43\x00\x3a\x00\x5c\x00\x57\x00\x69\x00\x6e\x00\x64\x00\x6f\x00"
    b"\x77\x00\x73\x00\x5c\x00\x73\x00\x79\x00\x73\x00\x74\x00\x65\x00"
    b"\x6d\x00\x33\x00\x32\x00\x5c\x00\x73\x00\x70\x00\x70\x00\x73\x00"
    b"\x76\x00\x63\x00\x2e\x00\x65\x00\x78\x00\x65\x00\x00\x00\xf4\x01"
    b"\x00\x00\x00\x00\x00\x00\x00\x00"
)


def create_event() -> EventTraceHeader:
    header_data = memoryview(EVENT_TRACE_EVENT)
    marker = Marker(0xC000A0112)
    return EventTraceHeader(marker, header_data, Mock())


def test_event_header() -> None:
    header = create_event().header
    assert header.Size == 0x112
    assert header.Marker == 0xC013
    assert header.Version == 0x1
    assert header.ThreadId == 0x2E8
    assert header.ProcessId == 0x2E4
    assert header.TimeDelta == 0x0B41152B
    assert header.ProviderId == b"\xa7\xce\xdd\xb8\x20\xb5\x09\x49\xbc\xeb\xe0\x17\x0c\x9f\x0e\x99"
    assert header.KernelTime == 0xB000000
    assert header.UserTime == 0x5
